<?xml version="1.0" encoding="UTF-8"?>
<node>
  <interface name="org.freedesktop.DBus.Introspectable">
    <method name="Introspect">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Peer">
    <method name="Ping">
    </method>
    <method name="GetMachineId">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Properties">
    <method name="Get">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg type="v" direction="out"/>
    </method>
    <method name="Set">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg name="value" type="v" direction="in"/>
    </method>
    <method name="GetAll">
      <arg name="interface_name" type="s" direction="in"/>
      <arg type="a{sv}" direction="out"/>
    </method>
    <!--
     Emits the `org.freedesktop.DBus.Properties.PropertiesChanged` signal.
     -->
    <signal name="PropertiesChanged">
      <arg name="interface_name" type="s"/>
      <arg name="changed_properties" type="a{sv}"/>
      <arg name="invalidated_properties" type="as"/>
    </signal>
  </interface>
  <interface name="org.opensuse.Agama1.Network.Connections">
    <!--
     Returns the D-Bus paths of the network connections.
     -->
    <method name="GetConnections">
      <arg type="ao" direction="out"/>
    </method>
    <!--
     Adds a new network connection.

     * `id`: connection name.
     * `ty`: connection type (see [agama_lib::network::types::DeviceType]).
     -->
    <method name="AddConnection">
      <arg name="id" type="s" direction="in"/>
      <arg name="ty" type="y" direction="in"/>
    </method>
    <!--
     Returns the D-Bus path of the network connection.

     * `id`: connection ID.
     -->
    <method name="GetConnection">
      <arg name="id" type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <!--
     Removes a network connection.

     * `uuid`: connection UUID..
     -->
    <method name="RemoveConnection">
      <arg name="id" type="s" direction="in"/>
    </method>
    <!--
     Applies the network configuration.

     It includes adding, updating and removing connections as needed.
     -->
    <method name="Apply">
    </method>
    <!--
     Notifies than a new interface has been added.
     -->
    <signal name="ConnectionAdded">
      <arg name="id" type="s"/>
      <arg name="path" type="o"/>
    </signal>
  </interface>
</node>
